/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as IndexImport } from './pages/index'
import { Route as LoginIndexImport } from './pages/login/index'
import { Route as TeamIdIndexImport } from './pages/$teamId/index'
import { Route as LoginCallbackImport } from './pages/login/callback'
import { Route as TeamIdWorkspaceIndexImport } from './pages/$teamId/workspace/index'
import { Route as TeamIdWorkflowsIndexImport } from './pages/$teamId/workflows/index'
import { Route as TeamIdWorkbenchIndexImport } from './pages/$teamId/workbench/index'
import { Route as TeamIdTextModelsIndexImport } from './pages/$teamId/text-models/index'
import { Route as TeamIdTextModelStoreIndexImport } from './pages/$teamId/text-model-store/index'
import { Route as TeamIdTextDataIndexImport } from './pages/$teamId/text-data/index'
import { Route as TeamIdTextDataStoreIndexImport } from './pages/$teamId/text-data-store/index'
import { Route as TeamIdTableDataIndexImport } from './pages/$teamId/table-data/index'
import { Route as TeamIdSettingsIndexImport } from './pages/$teamId/settings/index'
import { Route as TeamIdRenderToolsIndexImport } from './pages/$teamId/render-tools/index'
import { Route as TeamIdMediaDataIndexImport } from './pages/$teamId/media-data/index'
import { Route as TeamIdJoinTeamIndexImport } from './pages/$teamId/join-team/index'
import { Route as TeamIdImageModelsIndexImport } from './pages/$teamId/image-models/index'
import { Route as TeamIdImageModelStoreIndexImport } from './pages/$teamId/image-model-store/index'
import { Route as TeamIdApplicationStoreIndexImport } from './pages/$teamId/application-store/index'
import { Route as TeamIdActionToolsIndexImport } from './pages/$teamId/action-tools/index'
import { Route as TeamIdWorkspaceWorkflowIdIndexImport } from './pages/$teamId/workspace/$workflowId/index'
import { Route as TeamIdTextDataTextIdIndexImport } from './pages/$teamId/text-data/$textId/index'
import { Route as TeamIdTableDataDatabaseIdIndexImport } from './pages/$teamId/table-data/$databaseId/index'
import { Route as TeamIdActionToolsActionToolNameIndexImport } from './pages/$teamId/action-tools/$actionToolName/index'
import { Route as TeamIdWorkspaceWorkflowIdPageIdIndexImport } from './pages/$teamId/workspace/$workflowId/$pageId/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdIndexRoute = TeamIdIndexImport.update({
  path: '/$teamId/',
  getParentRoute: () => rootRoute,
} as any)

const LoginCallbackRoute = LoginCallbackImport.update({
  path: '/login/callback',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdWorkspaceIndexRoute = TeamIdWorkspaceIndexImport.update({
  path: '/$teamId/workspace/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdWorkflowsIndexRoute = TeamIdWorkflowsIndexImport.update({
  path: '/$teamId/workflows/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdWorkbenchIndexRoute = TeamIdWorkbenchIndexImport.update({
  path: '/$teamId/workbench/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdTextModelsIndexRoute = TeamIdTextModelsIndexImport.update({
  path: '/$teamId/text-models/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdTextModelStoreIndexRoute = TeamIdTextModelStoreIndexImport.update({
  path: '/$teamId/text-model-store/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdTextDataIndexRoute = TeamIdTextDataIndexImport.update({
  path: '/$teamId/text-data/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdTextDataStoreIndexRoute = TeamIdTextDataStoreIndexImport.update({
  path: '/$teamId/text-data-store/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdTableDataIndexRoute = TeamIdTableDataIndexImport.update({
  path: '/$teamId/table-data/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdSettingsIndexRoute = TeamIdSettingsIndexImport.update({
  path: '/$teamId/settings/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdRenderToolsIndexRoute = TeamIdRenderToolsIndexImport.update({
  path: '/$teamId/render-tools/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdMediaDataIndexRoute = TeamIdMediaDataIndexImport.update({
  path: '/$teamId/media-data/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdJoinTeamIndexRoute = TeamIdJoinTeamIndexImport.update({
  path: '/$teamId/join-team/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdImageModelsIndexRoute = TeamIdImageModelsIndexImport.update({
  path: '/$teamId/image-models/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdImageModelStoreIndexRoute = TeamIdImageModelStoreIndexImport.update(
  {
    path: '/$teamId/image-model-store/',
    getParentRoute: () => rootRoute,
  } as any,
)

const TeamIdApplicationStoreIndexRoute =
  TeamIdApplicationStoreIndexImport.update({
    path: '/$teamId/application-store/',
    getParentRoute: () => rootRoute,
  } as any)

const TeamIdActionToolsIndexRoute = TeamIdActionToolsIndexImport.update({
  path: '/$teamId/action-tools/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdWorkspaceWorkflowIdIndexRoute =
  TeamIdWorkspaceWorkflowIdIndexImport.update({
    path: '/$teamId/workspace/$workflowId/',
    getParentRoute: () => rootRoute,
  } as any)

const TeamIdTextDataTextIdIndexRoute = TeamIdTextDataTextIdIndexImport.update({
  path: '/$teamId/text-data/$textId/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdTableDataDatabaseIdIndexRoute =
  TeamIdTableDataDatabaseIdIndexImport.update({
    path: '/$teamId/table-data/$databaseId/',
    getParentRoute: () => rootRoute,
  } as any)

const TeamIdActionToolsActionToolNameIndexRoute =
  TeamIdActionToolsActionToolNameIndexImport.update({
    path: '/$teamId/action-tools/$actionToolName/',
    getParentRoute: () => rootRoute,
  } as any)

const TeamIdWorkspaceWorkflowIdPageIdIndexRoute =
  TeamIdWorkspaceWorkflowIdPageIdIndexImport.update({
    path: '/$teamId/workspace/$workflowId/$pageId/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login/callback': {
      preLoaderRoute: typeof LoginCallbackImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/': {
      preLoaderRoute: typeof TeamIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/action-tools/': {
      preLoaderRoute: typeof TeamIdActionToolsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/application-store/': {
      preLoaderRoute: typeof TeamIdApplicationStoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/image-model-store/': {
      preLoaderRoute: typeof TeamIdImageModelStoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/image-models/': {
      preLoaderRoute: typeof TeamIdImageModelsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/join-team/': {
      preLoaderRoute: typeof TeamIdJoinTeamIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/media-data/': {
      preLoaderRoute: typeof TeamIdMediaDataIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/render-tools/': {
      preLoaderRoute: typeof TeamIdRenderToolsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/settings/': {
      preLoaderRoute: typeof TeamIdSettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/table-data/': {
      preLoaderRoute: typeof TeamIdTableDataIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/text-data-store/': {
      preLoaderRoute: typeof TeamIdTextDataStoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/text-data/': {
      preLoaderRoute: typeof TeamIdTextDataIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/text-model-store/': {
      preLoaderRoute: typeof TeamIdTextModelStoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/text-models/': {
      preLoaderRoute: typeof TeamIdTextModelsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/workbench/': {
      preLoaderRoute: typeof TeamIdWorkbenchIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/workflows/': {
      preLoaderRoute: typeof TeamIdWorkflowsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/workspace/': {
      preLoaderRoute: typeof TeamIdWorkspaceIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/action-tools/$actionToolName/': {
      preLoaderRoute: typeof TeamIdActionToolsActionToolNameIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/table-data/$databaseId/': {
      preLoaderRoute: typeof TeamIdTableDataDatabaseIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/text-data/$textId/': {
      preLoaderRoute: typeof TeamIdTextDataTextIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/workspace/$workflowId/': {
      preLoaderRoute: typeof TeamIdWorkspaceWorkflowIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/workspace/$workflowId/$pageId/': {
      preLoaderRoute: typeof TeamIdWorkspaceWorkflowIdPageIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LoginCallbackRoute,
  TeamIdIndexRoute,
  LoginIndexRoute,
  TeamIdActionToolsIndexRoute,
  TeamIdApplicationStoreIndexRoute,
  TeamIdImageModelStoreIndexRoute,
  TeamIdImageModelsIndexRoute,
  TeamIdJoinTeamIndexRoute,
  TeamIdMediaDataIndexRoute,
  TeamIdRenderToolsIndexRoute,
  TeamIdSettingsIndexRoute,
  TeamIdTableDataIndexRoute,
  TeamIdTextDataStoreIndexRoute,
  TeamIdTextDataIndexRoute,
  TeamIdTextModelStoreIndexRoute,
  TeamIdTextModelsIndexRoute,
  TeamIdWorkbenchIndexRoute,
  TeamIdWorkflowsIndexRoute,
  TeamIdWorkspaceIndexRoute,
  TeamIdActionToolsActionToolNameIndexRoute,
  TeamIdTableDataDatabaseIdIndexRoute,
  TeamIdTextDataTextIdIndexRoute,
  TeamIdWorkspaceWorkflowIdIndexRoute,
  TeamIdWorkspaceWorkflowIdPageIdIndexRoute,
])

/* prettier-ignore-end */
