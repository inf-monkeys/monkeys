/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as LoginImport } from './pages/login'
import { Route as IndexImport } from './pages/index'
import { Route as TeamIdIndexImport } from './pages/$teamId/index'
import { Route as ComponentsTooltipImport } from './pages/components/tooltip'
import { Route as ComponentsTagImport } from './pages/components/tag'
import { Route as ComponentsSwitchImport } from './pages/components/switch'
import { Route as ComponentsPopoverImport } from './pages/components/popover'
import { Route as ComponentsModalImport } from './pages/components/modal'
import { Route as ComponentsButtonImport } from './pages/components/button'
import { Route as TeamIdWorkflowsIndexImport } from './pages/$teamId/workflows/index'
import { Route as TeamIdWorkbenchIndexImport } from './pages/$teamId/workbench/index'
import { Route as TeamIdToolStoreIndexImport } from './pages/$teamId/tool-store/index'
import { Route as TeamIdTextModelsIndexImport } from './pages/$teamId/text-models/index'
import { Route as TeamIdTextDataIndexImport } from './pages/$teamId/text-data/index'
import { Route as TeamIdTableDataIndexImport } from './pages/$teamId/table-data/index'
import { Route as TeamIdSettingsIndexImport } from './pages/$teamId/settings/index'
import { Route as TeamIdRenderToolsIndexImport } from './pages/$teamId/render-tools/index'
import { Route as TeamIdModelStoreIndexImport } from './pages/$teamId/model-store/index'
import { Route as TeamIdMediaDataIndexImport } from './pages/$teamId/media-data/index'
import { Route as TeamIdImageModelsIndexImport } from './pages/$teamId/image-models/index'
import { Route as TeamIdDataStoreIndexImport } from './pages/$teamId/data-store/index'
import { Route as TeamIdCanvasIndexImport } from './pages/$teamId/canvas/index'
import { Route as TeamIdApplicationStoreIndexImport } from './pages/$teamId/application-store/index'
import { Route as TeamIdActionToolsIndexImport } from './pages/$teamId/action-tools/index'

// Create Virtual Routes

const TeamIdSettingsUserIndexLazyImport = createFileRoute(
  '/$teamId/settings/user/',
)()
const TeamIdSettingsTeamMembersIndexLazyImport = createFileRoute(
  '/$teamId/settings/team-members/',
)()
const TeamIdSettingsApiKeyIndexLazyImport = createFileRoute(
  '/$teamId/settings/api-key/',
)()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdIndexRoute = TeamIdIndexImport.update({
  path: '/$teamId/',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsTooltipRoute = ComponentsTooltipImport.update({
  path: '/components/tooltip',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsTagRoute = ComponentsTagImport.update({
  path: '/components/tag',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsSwitchRoute = ComponentsSwitchImport.update({
  path: '/components/switch',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsPopoverRoute = ComponentsPopoverImport.update({
  path: '/components/popover',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsModalRoute = ComponentsModalImport.update({
  path: '/components/modal',
  getParentRoute: () => rootRoute,
} as any)

const ComponentsButtonRoute = ComponentsButtonImport.update({
  path: '/components/button',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdWorkflowsIndexRoute = TeamIdWorkflowsIndexImport.update({
  path: '/$teamId/workflows/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdWorkbenchIndexRoute = TeamIdWorkbenchIndexImport.update({
  path: '/$teamId/workbench/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdToolStoreIndexRoute = TeamIdToolStoreIndexImport.update({
  path: '/$teamId/tool-store/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdTextModelsIndexRoute = TeamIdTextModelsIndexImport.update({
  path: '/$teamId/text-models/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdTextDataIndexRoute = TeamIdTextDataIndexImport.update({
  path: '/$teamId/text-data/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdTableDataIndexRoute = TeamIdTableDataIndexImport.update({
  path: '/$teamId/table-data/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdSettingsIndexRoute = TeamIdSettingsIndexImport.update({
  path: '/$teamId/settings/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdRenderToolsIndexRoute = TeamIdRenderToolsIndexImport.update({
  path: '/$teamId/render-tools/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdModelStoreIndexRoute = TeamIdModelStoreIndexImport.update({
  path: '/$teamId/model-store/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdMediaDataIndexRoute = TeamIdMediaDataIndexImport.update({
  path: '/$teamId/media-data/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdImageModelsIndexRoute = TeamIdImageModelsIndexImport.update({
  path: '/$teamId/image-models/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdDataStoreIndexRoute = TeamIdDataStoreIndexImport.update({
  path: '/$teamId/data-store/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdCanvasIndexRoute = TeamIdCanvasIndexImport.update({
  path: '/$teamId/canvas/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdApplicationStoreIndexRoute =
  TeamIdApplicationStoreIndexImport.update({
    path: '/$teamId/application-store/',
    getParentRoute: () => rootRoute,
  } as any)

const TeamIdActionToolsIndexRoute = TeamIdActionToolsIndexImport.update({
  path: '/$teamId/action-tools/',
  getParentRoute: () => rootRoute,
} as any)

const TeamIdSettingsUserIndexLazyRoute =
  TeamIdSettingsUserIndexLazyImport.update({
    path: '/$teamId/settings/user/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./pages/$teamId/settings/user/index.lazy').then((d) => d.Route),
  )

const TeamIdSettingsTeamMembersIndexLazyRoute =
  TeamIdSettingsTeamMembersIndexLazyImport.update({
    path: '/$teamId/settings/team-members/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./pages/$teamId/settings/team-members/index.lazy').then(
      (d) => d.Route,
    ),
  )

const TeamIdSettingsApiKeyIndexLazyRoute =
  TeamIdSettingsApiKeyIndexLazyImport.update({
    path: '/$teamId/settings/api-key/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./pages/$teamId/settings/api-key/index.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/components/button': {
      preLoaderRoute: typeof ComponentsButtonImport
      parentRoute: typeof rootRoute
    }
    '/components/modal': {
      preLoaderRoute: typeof ComponentsModalImport
      parentRoute: typeof rootRoute
    }
    '/components/popover': {
      preLoaderRoute: typeof ComponentsPopoverImport
      parentRoute: typeof rootRoute
    }
    '/components/switch': {
      preLoaderRoute: typeof ComponentsSwitchImport
      parentRoute: typeof rootRoute
    }
    '/components/tag': {
      preLoaderRoute: typeof ComponentsTagImport
      parentRoute: typeof rootRoute
    }
    '/components/tooltip': {
      preLoaderRoute: typeof ComponentsTooltipImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/': {
      preLoaderRoute: typeof TeamIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/action-tools/': {
      preLoaderRoute: typeof TeamIdActionToolsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/application-store/': {
      preLoaderRoute: typeof TeamIdApplicationStoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/canvas/': {
      preLoaderRoute: typeof TeamIdCanvasIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/data-store/': {
      preLoaderRoute: typeof TeamIdDataStoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/image-models/': {
      preLoaderRoute: typeof TeamIdImageModelsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/media-data/': {
      preLoaderRoute: typeof TeamIdMediaDataIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/model-store/': {
      preLoaderRoute: typeof TeamIdModelStoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/render-tools/': {
      preLoaderRoute: typeof TeamIdRenderToolsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/settings/': {
      preLoaderRoute: typeof TeamIdSettingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/table-data/': {
      preLoaderRoute: typeof TeamIdTableDataIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/text-data/': {
      preLoaderRoute: typeof TeamIdTextDataIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/text-models/': {
      preLoaderRoute: typeof TeamIdTextModelsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/tool-store/': {
      preLoaderRoute: typeof TeamIdToolStoreIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/workbench/': {
      preLoaderRoute: typeof TeamIdWorkbenchIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/workflows/': {
      preLoaderRoute: typeof TeamIdWorkflowsIndexImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/settings/api-key/': {
      preLoaderRoute: typeof TeamIdSettingsApiKeyIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/settings/team-members/': {
      preLoaderRoute: typeof TeamIdSettingsTeamMembersIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/$teamId/settings/user/': {
      preLoaderRoute: typeof TeamIdSettingsUserIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LoginRoute,
  ComponentsButtonRoute,
  ComponentsModalRoute,
  ComponentsPopoverRoute,
  ComponentsSwitchRoute,
  ComponentsTagRoute,
  ComponentsTooltipRoute,
  TeamIdIndexRoute,
  TeamIdActionToolsIndexRoute,
  TeamIdApplicationStoreIndexRoute,
  TeamIdCanvasIndexRoute,
  TeamIdDataStoreIndexRoute,
  TeamIdImageModelsIndexRoute,
  TeamIdMediaDataIndexRoute,
  TeamIdModelStoreIndexRoute,
  TeamIdRenderToolsIndexRoute,
  TeamIdSettingsIndexRoute,
  TeamIdTableDataIndexRoute,
  TeamIdTextDataIndexRoute,
  TeamIdTextModelsIndexRoute,
  TeamIdToolStoreIndexRoute,
  TeamIdWorkbenchIndexRoute,
  TeamIdWorkflowsIndexRoute,
  TeamIdSettingsApiKeyIndexLazyRoute,
  TeamIdSettingsTeamMembersIndexLazyRoute,
  TeamIdSettingsUserIndexLazyRoute,
])

/* prettier-ignore-end */
